#!/bin/bash
# Create service discovery for metrics endpoints

set -e

eval "$(nubis-metadata)"

cat << EOF > /etc/nubis/puppet/kube-sd.pp
# generated by kube-sd.sh
include nubis_discovery

EOF

if [ "${NUBIS_PURPOSE}" == "master" ]; then
    cat << EOF >> /etc/nubis/puppet/kube-sd.pp
nubis::discovery::service { 'kube-scheduler-metrics':
    tags => [ 'metrics' ],
    port => '10251',
    http => 'http://localhost:10251/metrics'
}

nubis::discovery::service { 'kube-controller-metrics':
    tags => [ 'metrics' ],
    port => '10252',
    http => 'http://localhost:10252/metrics',
}
# TODO: kubeapi server needs to be here
EOF
fi

puppet apply --modulepath /etc/puppetlabs/code/modules /etc/nubis/puppet/kube-sd.pp

# FIXME: Use nubis-lib function once nubis-base#809 is resolved
if [ "$NUBIS_ARENA" != "" ]; then
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%ARENA%%/$NUBIS_ARENA/g"
fi

if [ "$NUBIS_ENVIRONMENT" != "" ]; then
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%ENVIRONMENT%%/$NUBIS_ENVIRONMENT/g"
fi

if [ "$NUBIS_STACK" != "" ]; then
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%STACK%%/$NUBIS_STACK/g"
fi

if [ "$NUBIS_PROJECT" != "" ]; then
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%PROJECT%%/$NUBIS_PROJECT/g"
fi

if [ "$NUBIS_PURPOSE" != "" ]; then
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%PURPOSE%%/$NUBIS_PURPOSE/g"
fi

systemctl reload-or-restart consul.service
