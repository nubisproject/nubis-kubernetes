#!/bin/bash
# Create service discovery for metrics endpoints

set -e

cat << EOF > /etc/nubis/puppet/kube-sd.pp
# generated by kube-sd.sh
include nubis_discovery

EOF

if [ "${NUBIS_PURPOSE}" == "master" ]; then
    cat << EOF >> /etc/nubis/puppet/kube-sd.pp
nubis::discovery::service { 'kube-scheduler-metrics':
    tags => [ 'metrics' ],
    port => '10251',
    http => 'http://localhost:10251/metrics'
}

nubis::discovery::service { 'kube-controller-metrics':
    tags => [ 'metrics' ],
    port => '10252',
    http => 'http://localhost:10252/metrics',
}
# TODO: kubeapi server needs to be here
EOF
fi

puppet apply --modulepath /etc/puppetlabs/code/modules /etc/nubis/puppet/kube-sd.pp

# NOTE: This is to search and replace service discovery which
#       generates %%ENVIRONMENT%% tags so this fixes it here
if nubis-metadata NUBIS_ARENA > /dev/null 2>&1; then
    NUBIS_ARENA=$(nubis-metadata NUBIS_ARENA)
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%ARENA%%/$NUBIS_ARENA/g"
fi

if nubis-metadata NUBIS_ENVIRONMENT > /dev/null 2>&1; then
    NUBIS_ENVIRONMENT=$(nubis-metadata NUBIS_ENVIRONMENT)
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%ENVIRONMENT%%/$NUBIS_ENVIRONMENT/g"
fi

if nubis-metadata NUBIS_STACK > /dev/null 2>&1; then
    NUBIS_STACK=$(nubis-metadata NUBIS_STACK)
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%STACK%%/$NUBIS_STACK/g"
fi

if nubis-metadata NUBIS_PROJECT > /dev/null 2>&1; then
    NUBIS_PROJECT=$(nubis-metadata NUBIS_PROJECT)
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%PROJECT%%/$NUBIS_PROJECT/g"
fi

if nubis-metadata NUBIS_PURPOSE > /dev/null 2>&1; then
    NUBIS_PURPOSE=$(nubis-metadata NUBIS_PURPOSE)
    find /etc/consul -type f -name '*.json' -print0 | xargs -0 --verbose sed -i -e "s/%%PURPOSE%%/$NUBIS_PURPOSE/g"
fi

systemctl reload-or-restart consul.service
